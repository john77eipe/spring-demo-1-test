/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/java_library_plugin.html
 */



    
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin")
    }
}

plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
	id 'eclipse'
	
}

apply plugin: 'io.spring.dependency-management'

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.hsqldb:hsqldb'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
    	// exlcuding junit 4
    	exclude group: 'junit', module: 'junit'
    }
    
    /**
    	Test Dependencies Follows
    **/
    
    
	// junit 5 api
	testCompile "org.junit.jupiter:junit-jupiter-api:5.2.0"
	// For junit5 parameterised test support
  	testCompile "org.junit.jupiter:junit-jupiter-params:5.2.0"
  	// junit 5 implementation
  	testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"
  	// Only required to run junit5 test from IDE
  	testRuntime "org.junit.platform:junit-platform-launcher"
    
}
